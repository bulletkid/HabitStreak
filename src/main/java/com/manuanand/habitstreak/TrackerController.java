package com.manuanand.habitstreak;

import java.util.Date;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.server.ResponseStatusException;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/habitstreak") // This means URL's start with /habitstreak (after Application path)
public class TrackerController {
	@Autowired // This means to get the bean called trackerRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private TrackerRepository trackerRepository;
	
	@Autowired // This means to get the bean called habitRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private HabitRepository habitRepository;

	///
	// Tracker Repository
	///
	@PostMapping(path="/addTracker") // Map ONLY POST Requests
	public @ResponseBody String addTracker (@RequestParam Integer habitId,
			@RequestParam Integer numSessions, 
			@RequestParam(required = false) Date date,
			@RequestParam(required = false) String notes) {

		Optional<Habit> habit = habitRepository.findById(habitId);
		if (habit.isEmpty()) {
			throw new ResponseStatusException(
					  HttpStatus.NOT_FOUND, "Habit with ID" + habitId + " not found");
		}
		
		Tracker newTracker = new Tracker();
		newTracker = populateTracker(newTracker, date, habitId, numSessions, notes);
		trackerRepository.save(newTracker);
		
		return "Saved";
	}
	
	@GetMapping(path="/getAllTrackers")
	public @ResponseBody Iterable<Tracker> getTrackers() {
		
		// This returns a JSON or XML with the users
		return trackerRepository.findAll();
	}
	
	@GetMapping(path="/getTrackerById")
	public @ResponseBody Tracker getTrackerById(@RequestParam Integer id) {
		
		Optional<Tracker> tracker = trackerRepository.findById(id);
		if (!tracker.isEmpty()) {
			return tracker.get();
		} 
		
		return null;
	}
	
	///
	/// Helper Methods
	///
	private Tracker populateTracker( Tracker newTracker, Date date, Integer habitId, int numSessions, String notes)
	{
		if (date == null) {
			newTracker.setDate(new Date());
		}
		
		newTracker.setHabitId(habitId);
		newTracker.setNumSessions(numSessions);
		newTracker.setNotes(notes);
		
		return newTracker;
	}
}